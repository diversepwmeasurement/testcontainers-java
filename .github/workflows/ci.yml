concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
jobs:
  check:
    needs:
    - find_gradle_jobs
    permissions:
      checks: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/setup-build
    - continue-on-error: true
      name: Build and test with Gradle (${{matrix.gradle_args}})
      run: './gradlew --no-daemon --continue --scan ${{matrix.gradle_args}}

        '
    - continue-on-error: true
      uses: ./.github/actions/setup-junit-report
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find_gradle_jobs.outputs.matrix) }}
  check_docs_examples:
    needs:
    - find_docs_examples_jobs
    permissions:
      checks: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/setup-build
    - continue-on-error: true
      name: Build and test with Gradle (${{matrix.gradle_args}})
      run: './gradlew --no-daemon --continue --scan ${{matrix.gradle_args}}

        '
    - continue-on-error: true
      uses: ./.github/actions/setup-junit-report
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find_docs_examples_jobs.outputs.matrix) }}
  check_examples:
    needs:
    - find_examples_jobs
    permissions:
      checks: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/setup-build
    - continue-on-error: true
      name: Build and test Examples with Gradle (${{matrix.gradle_args}})
      run: './gradlew --no-daemon --continue --scan --info ${{matrix.gradle_args}}

        '
      working-directory: ./examples/
    - continue-on-error: true
      uses: ./.github/actions/setup-junit-report
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find_examples_jobs.outputs.matrix) }}
  core:
    permissions:
      checks: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/setup-build
    - continue-on-error: true
      name: Build and test with Gradle
      run: './gradlew :testcontainers:check --no-daemon --continue --scan

        '
    - continue-on-error: true
      uses: ./.github/actions/setup-junit-report
  find_docs_examples_jobs:
    needs:
    - check_examples
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/setup-java
    - continue-on-error: true
      name: Setup Gradle Build Action
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      env:
        READ_ONLY_REMOTE_GRADLE_CACHE: true
      id: set-matrix
      run: 'TASKS=$(./gradlew --no-daemon --parallel -q testMatrix | jq ''map(select(startswith(":docs:")))''
        --compact-output)

        echo $TASKS

        echo "matrix={\"gradle_args\":$TASKS}" >> $GITHUB_OUTPUT

        '
  find_examples_jobs:
    needs:
    - check
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/setup-java
    - continue-on-error: true
      name: Setup Gradle Build Action
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      env:
        READ_ONLY_REMOTE_GRADLE_CACHE: true
      id: set-matrix
      run: 'TASKS=$(./gradlew --no-daemon --parallel -q testMatrix)

        echo $TASKS

        echo "matrix={\"gradle_args\":$TASKS}" >> $GITHUB_OUTPUT

        '
      working-directory: ./examples/
  find_gradle_jobs:
    needs:
    - core
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/setup-java
    - continue-on-error: true
      name: Setup Gradle Build Action
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      env:
        READ_ONLY_REMOTE_GRADLE_CACHE: true
      id: set-matrix
      run: 'TASKS=$(./gradlew --no-daemon --parallel -q testMatrix | jq ''del(.[]
        | select(. == ":testcontainers:check" or startswith(":docs:")))'' --compact-output)

        echo $TASKS

        echo "matrix={\"gradle_args\":$TASKS}" >> $GITHUB_OUTPUT

        '
  turbo-mode:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    permissions:
      checks: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: ./.github/actions/setup-build
    - continue-on-error: true
      name: Setup Testcontainers Cloud Client
      uses: atomicjar/testcontainers-cloud-setup-action@main
      with:
        args: --max-concurrency=4
        token: ${{ secrets.TC_CLOUD_TOKEN }}
    - continue-on-error: true
      name: Test using Testcontainers Cloud with Turbo Mode enabled
      run: './gradlew check --no-daemon --continue --scan --info

        '
      working-directory: ./smoke-test/
    - continue-on-error: true
      uses: ./.github/actions/setup-junit-report
name: CI
on:
  repository_dispatch:
    types: trigger-ga___ci.yml
permissions:
  contents: read
